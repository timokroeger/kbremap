# Set to `true` to spawn a console window with debug output.
# Debug output is always shown when executed from a termnial even when set to false.
debug_output = false

[layers]
# A layer is a collection of mappings where each mapping requires a `scan_code` to select a physical key on the keyboard.
# Scan codes: https://upload.wikimedia.org/wikipedia/commons/3/34/Ps2_de_keyboard_scancode_set_1.svg
#
# Windows translates the scan code to a virtual key depending on the active system layout.
# Virtual keys: https://docs.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes
#
# You can use the debug output to query scan code (sc) and virtual (vk) information.
base = [
    # The `characters` target remaps multiple keys to (Unicode) characters starting
    # at `scan_code`. Increments `scan_code` by one for each following character.
    # Simulates a virtual key press if the character exists on the active layout
    # so that keyborad shortcuts continue to work as expected. Directly injects
    # Unicode characters otherwise.
    { scan_code = 0x02, characters = "1234567890-" },
    { scan_code = 0x10, characters = "bu.,üpclmfx" },
    { scan_code = 0x1E, characters = "hieaodtrnsß" },
    { scan_code = 0x2C, characters = "kyöäqjgwvz" },
    # The `layer` target switches to another virtual layer.
    # Ignores the original scan code if no `virtual_key` is specified.
    { scan_code = 0x2A, layer = "shift", virtual_key = 0xA0 }, # left shift
    { scan_code = 0xE036, layer = "shift", virtual_key = 0xA1 }, # right shift
    { scan_code = 0x3A, layer = "symbols" }, # caps lock
    { scan_code = 0x2B, layer = "symbols" }, # '\' on US layout, `#` key on german layout
    { scan_code = 0x56, layer = "navigation_numpad" }, # `>` on german layout
    { scan_code = 0xE038, layer = "navigation_numpad" }, # `right alt` US layout, `Alt Gr` on german layout
    # The `virtual_keys` works similar to the `characters` target but takes a collection of virtual keys.
    # An empty target can be used to ignore scan codes.
    { scan_code = 0x021D, virtual_keys = [] }, # ignored additional scan code from `Alt Gr`
    # Emoji Keys! Attention: Some Emojis use multiple chacters which are mapped to multipe scan codes.
    { scan_code = 0x29, characters = "😊" },
]

# A layer without any mapping: Forward all key presses without change.
disable = []

shift = [
    { scan_code = 0x02, characters = "°§ℓ»«$€„“”—" },
    { scan_code = 0x10, characters = "BU:;ÜPCLMFX" },
    { scan_code = 0x1E, characters = "HIEAODTRNS" },
    { scan_code = 0x2C, characters = "KYÖÄQJGWVZ" },
]

symbols = [
    { scan_code = 0x02, characters = "¹²³›‹¢¥‚‘’—" },
    { scan_code = 0x10, characters = "…_[]^!<>=&" },
    { scan_code = 0x1E, characters = "\\/{}*?()-:@" },
    { scan_code = 0x2C, characters = "#$|~`+%\"';" },
]

navigation_numpad = [
    { scan_code = 0x02, characters = "ªº№⋮·£¤0/*-" },
    { scan_code = 0x15, characters = "¿" },
    { scan_code = 0x23, characters = "¡" },
    # Navigation
    { scan_code = 0x10, virtual_keys = [0x21, 0x08, 0x26, 0x2E, 0x22] },
    { scan_code = 0x1E, virtual_keys = [0x24, 0x25, 0x28, 0x27, 0x23] },
    { scan_code = 0x2C, virtual_keys = [0x1B, 0x09, 0x2D, 0x0D] },
    # Numpad
    { scan_code = 0x16, virtual_keys = [0x67, 0x68, 0x69, 0x6B, 0x6D] },
    { scan_code = 0x24, virtual_keys = [0x64, 0x65, 0x66] },
    { scan_code = 0x27, characters = ",." },
    { scan_code = 0x31, characters = ":" },
    { scan_code = 0x32, virtual_keys = [0x61, 0x62, 0x63] },
    { scan_code = 0x35, characters = ";" },
    { scan_code = 0x39, virtual_keys = [0x60] },
]
