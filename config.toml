# Example Dvorak layout configuration with comments.

# Set to `true` to spawn a console window with debug output.
# Debug output is always shown when executed from a terminal even when set to false.
debug_output = false

# Set to `true` to disable caps lock.
# Useful when the caps lock is remapped but the caps lock state is toggled externally
# for example by RDP or other programs running with admin rights.
disable_caps_lock = false

[layers]
# A layer is a collection of mappings where each mapping consists of a *source* (`scan_code`) and a
# *target* (e.g. characters, modifiers keys, ...).
#
# Scan codes are used as source to specify the behaviour of a physical key on the keyboard.
# Reference: <https://upload.wikimedia.org/wikipedia/commons/3/34/Ps2_de_keyboard_scancode_set_1.svg>
#
# Scan codes without explicit mapping will use the default Windows layout to translate
# a key press to a [virtual key code](https://docs.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes).
#
# Use the debug output to observe scan code (sc) and virtual key code (vk) information while pressing keys.
base = [
    # The `characters` target remaps multiple keys to (Unicode) characters starting
    # at `scan_code`. Increments `scan_code` by one for each following character.
    # Simulates a virtual key press if the character exists on the active Windows layout
    # so that keyborad shortcuts (e.g. Ctrl+a) continue to work as expected.
    # Injects a Unicode symbol if the character is not available on the Windows layout.
    { scan_code = 0x02, characters = "1234567890[]" },
    { scan_code = 0x10, characters = "',.pyfgcrl/=\\" },
    { scan_code = 0x1E, characters = "aoeaidhtns-" },
    { scan_code = 0x2C, characters = ";qjkxbmwvz" },

    # The `layer` target switches to another virtual layer.
    # Ignores the original scan code if no `virtual_key` is specified.
    { scan_code = 0x2A, layer = "shift", virtual_key = 0xA0 }, # left shift
    { scan_code = 0xE036, layer = "shift", virtual_key = 0xA1 }, # right shift

    # The `virtual_keys` works similar to the `characters` target but takes a collection of virtual keys.
    # An empty target can be used to ignore scan codes.
    { scan_code = 0x021D, virtual_keys = [] }, # ignored additional scan code from `Alt Gr`

    # Emoji Keys!
    # { scan_code = 0x29, characters = "ðŸš€" }, # `~` on US layout, `^` on german layout

    # Uncomment following lines to use the system ("querty" / "querz") layout for shortcuts
    # { scan_code = 0x1D, layer = "disabled" }, # left ctrl
    # { scan_code = 0xE01D, layer = "disabled" }, # right ctrl
    # { scan_code = 0x38, layer = "disabled" }, # left alt, right alt already used as MOD4
    # { scan_code = 0xE05B, layer = "disabled" }, # windows key
]

shift = [
    { scan_code = 0x02, characters =  "!@#$%^&*(){}" },
    { scan_code = 0x10, characters = "\"<>PYFGCRL?+|" },
    { scan_code = 0x1E, characters =  "AOEAIDHTNS_" },
    { scan_code = 0x2C, characters =  ":QJKXBMWVZ" },
]

# A layer without any mapping: Forward all key presses without change.
# disable = []
